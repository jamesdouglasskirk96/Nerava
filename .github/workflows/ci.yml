name: CI/CD Pipeline

on:
  push:
    branches: [ main, release/48h-sprint ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        cd nerava-backend-v9
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
    
    - name: Run unit tests
      run: |
        cd nerava-backend-v9
        python -m pytest tests/unit/ -v
    
    - name: Run API tests
      run: |
        cd nerava-backend-v9
        python -m pytest tests/api/ -v
    
    - name: Start backend server
      run: |
        cd nerava-backend-v9
        source .venv/bin/activate
        uvicorn app.main:app --host 127.0.0.1 --port 8000 &
        sleep 10
      env:
        REDIS_URL: redis://localhost:6379/0
        DATABASE_URL: sqlite:///./test.db
    
    - name: Run E2E tests
      run: |
        npm install -g @playwright/test
        npx playwright install
        npx playwright test e2e/tests/ --reporter=html
    
    - name: Upload E2E results
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: playwright-report
        path: playwright-report/
    
    - name: Run load tests
      run: |
        npm install -g k6
        k6 run e2e/load/load-test.js
    
    - name: Upload load test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: load-test-results
        path: load-test-results.*

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      run: |
        cd nerava-backend-v9
        pip install bandit safety
        bandit -r app/ -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          nerava-backend-v9/bandit-report.json
          nerava-backend-v9/safety-report.json

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        cd nerava-backend-v9
        docker build -t nerava-backend:latest .
    
    - name: Test Docker image
      run: |
        docker run -d --name nerava-test -p 8001:8000 nerava-backend:latest
        sleep 10
        curl -f http://localhost:8001/healthz || exit 1
        docker stop nerava-test
        docker rm nerava-test