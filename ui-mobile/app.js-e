const BASE = (localStorage.getItem('NERAVA_URL') || 'http://127.0.0.1:8000').replace(/\/+$/,'');
const USER = localStorage.getItem('NERAVA_USER') || 'demo@nerava.app';

const el = sel => document.querySelector(sel);
const els = sel => Array.from(document.querySelectorAll(sel));

const header    = el('#appHeader');
const banner    = el('#incentiveBanner');
const mapWrap   = el('#mapWrap');
const hubCard   = el('#hubCard');
const fabPlan   = el('#fabPlan');
const tripPanel = el('#tripPanel');

const pages = {
  explore:  el('#page-explore'),
  charge:   el('#page-charge'),
  wallet:   el('#page-wallet'),
  profile:  el('#page-profile'),
};

function showTab(name){
  // toggle page
  Object.entries(pages).forEach(([k,section])=>{
    section.classList.toggle('visible', k === name);
  });
  // explore shows map & banner; others hide map & banner
  const onExplore = (name === 'explore');
  mapWrap.style.display = onExplore ? 'block' : 'none';
  banner.classList.toggle('hidden', !onExplore);
  // tab active
  els('.tabbar .tab').forEach(btn => btn.classList.toggle('active', btn.dataset.target === name));
  // close trip panel when leaving explore
  if (!onExplore) tripPanel.classList.add('hidden');
}
els('.tabbar .tab').forEach(btn=>{
  btn.addEventListener('click', ()=> showTab(btn.dataset.target));
});

// ---- Map & data ----
let map;
function initMap(){
  map = L.map('map',{ zoomControl:false }).setView([30.4021,-97.7265], 14);
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{
    maxZoom: 19,
    attribution: '&copy; OpenStreetMap'
  }).addTo(map);
}

async function json(url, opts={}){
  const r = await fetch(url, { ...opts, headers: { 'Content-Type':'application/json' }});
  if (!r.ok) throw new Error(`${r.status} ${url}`);
  return r.json();
}

async function loadBanner(){
  try{
    const d = await json(`${BASE}/v1/incentives/window`);
    banner.classList.toggle('hidden', !d || !d.active);
    el('#bannerText').textContent = d && d.hint || 'Cheaper charging now';
  }catch{ /* keep default */ }
}

async function loadRecommendation(){
  try{
    const rec = await json(`${BASE}/v1/hubs/recommend?lat=30.4021&lng=-97.7265&radius_km=2&user_id=${encodeURIComponent(USER)}`);
    el('#chipStatus').textContent = (rec.status || 'busy');
    el('#chipTier').textContent   = (rec.tier || 'premium');
    el('#freeSpots').textContent  = `${rec.free_ports ?? 0} free`;
    el('#hubName').textContent    = `${rec.name || 'Nerava Hub'} â€¢ ${rec.id || 1}`;
    // center map near rec if we have location
    if (rec.lat && rec.lng){ map.setView([rec.lat, rec.lng], 15); }
  }catch(e){
    // keep seeded defaults
  }
}

// Wallet
async function loadWallet(){
  try{
    const d = await json(`${BASE}/v1/wallet?user_id=${encodeURIComponent(USER)}`);
    const cents = d.balance_cents ?? 0;
    el('#walletTotal').textContent = `+$${(cents/100).toFixed(2)}`;

    // demo-friendly "ways you earned" (if API has none)
    const ways = d.ways || [
      {label:'Off-peak award', amount_cents: 50},
      {label:'Perk reward',    amount_cents: 75},
      {label:'Utility bonus',   amount_cents: 100},
    ];
    const list = el('#walletWays');
    list.innerHTML = '';
    ways.forEach(w=>{
      const li = document.createElement('li');
      li.innerHTML = `<span>${w.label}</span><span>+$${(w.amount_cents/100).toFixed(2)}</span>`;
      list.appendChild(li);
    });
  }catch(e){
    // graceful
  }
}

// Preferences (save + reload rec)
el('#btnSavePrefs').addEventListener('click', async ()=>{
  const prefs = {};
  els('[data-pref]').forEach(chk => prefs[chk.dataset.pref] = chk.checked);
  try{
    await fetch(`${BASE}/v1/users/${encodeURIComponent(USER)}/prefs`,{
      method:'POST', headers:{'Content-Type':'application/json'},
      body: JSON.stringify(prefs)
    });
    await loadRecommendation();
    alert('Preferences saved');
  }catch(e){ alert('Failed saving preferences'); }
});
el('#btnNewRec').addEventListener('click', loadRecommendation);

// Trip planner toggle
fabPlan.addEventListener('click', ()=>{
  hubCard.classList.add('hidden');
  tripPanel.classList.remove('hidden');
});
el('#tripBack').addEventListener('click', (e)=>{
  e.preventDefault();
  tripPanel.classList.add('hidden');
  hubCard.classList.remove('hidden');
});

// Directions/Reserve (stubs)
el('#btnDirections').addEventListener('click', ()=> alert('Launching maps...'));
el('#btnReserve').addEventListener('click',   ()=> alert('Reserved (demo)'));

async function init(){
  initMap();
  await loadBanner();
  await loadRecommendation();
  await loadWallet();
  showTab('explore'); // default
}
document.addEventListener('DOMContentLoaded', init);
